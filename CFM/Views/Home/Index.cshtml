@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-12 col-lg-6 mb-3">
        <div class="d-flex justify-content-start align-item-center p-0">
            <button class="btn btn-primary">Đơn hàng mới</button>
            <button class="btn btn-primary mx-2">Khách hàng mới</button>
            <button class="btn btn-primary">Sản phẩm mới</button>
        </div>
    </div>
    <div class="col-12 col-lg-6">
        <div class="d-flex justify-content-end align-item-center">
            <input type="text" id="dateRange" name="dateRange" class="btn btn-outline-primary mt-0 mb-0"
                style="opacity: 1;">
        </div>
        <div class="d-flex justify-content-end align-items-center my-3 moment-type">
            <div class="btn-group">
                <input type="radio" name="moment" checked value="1" id="moment-day" class="btn-check">
                <label class="btn btn-outline-primary" for="moment-day">Ngày</label>
                <input type="radio" name="moment" value="2" id="moment-week" class="btn-check">
                <label class="btn btn-outline-primary" for="moment-week">Tuần</label>
                <input type="radio" name="moment" value="3" id="moment-month" class="btn-check">
                <label class="btn btn-outline-primary" for="moment-month">Tháng</label>
                <input type="radio" name="moment" value="4" id="moment-quarter" class="btn-check">
                <label class="btn btn-outline-primary" for="moment-quarter">Quý</label>
                <input type="radio" name="moment" value="5" id="moment-year" class="btn-check">
                <label class="btn btn-outline-primary" for="moment-year">Năm</label>
            </div>
        </div>
    </div>
</div>

<div class="page-content">
    <section class="row">
        <div class="col-12 col-lg-12">
            <div class="row">
                <div class="col-6 col-lg-4 col-md-6">
                    <div class="card">
                        <div class="card-body px-3 py-4-5">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="stats-icon purple">
                                        <i class="icon-mid  bi-cash-coin"></i>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <h6 class="text-muted font-semibold">Doanh Thu</h6>
                                    <h6 class="font-extrabold mb-0 revenues">0</h6>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-6 col-lg-4 col-md-6">
                    <div class="card">
                        <div class="card-body px-3 py-4-5">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="stats-icon blue">
                                        <i class="icon-mid  bi-box2-fill"></i>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <h6 class="text-muted font-semibold">Đơn hàng</h6>
                                    <h6 class="font-extrabold mb-0 totalOrders">0</h6>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-6 col-lg-4 col-md-6">
                    <div class="card">
                        <div class="card-body px-3 py-4-5">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="stats-icon green">
                                        <i class="icon-mid  bi-cup-straw"></i>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <h6 class="text-muted font-semibold">Số sản phẩm</h6>
                                    <h6 class="font-extrabold mb-0 numProducts">0</h6>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h4>Profile Visit</h4>
                        </div>
                        <div class="card-body">
                            <div id="chart-profile-visit"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            var now = new Date();
            var endDate = moment(now).format('DD/MM/YYYY');
            var startDate = moment(now.getTime() - 7 * 24 * 60 * 60 * 1000).format('DD/MM/YYYY');
            $('input[name="dateRange"]').daterangepicker({
                "startDate": startDate,
                "endDate": endDate,
                opens: 'left',
                locale: {
                    format: 'DD/MM/YYYY'
                }
            });
            reloadChart();

            $(document).on('change', '.moment-type', function () {
                reloadChart();
            })

            $(document).on('change', 'input[name="dateRange"]', function () {
                reloadChart();
            })
            function reloadChart() {
                var revenueMapBy_mm = {}, sumRevenue = 0, numProduct = 0, numOrder = 0, revenueMap = {};
                $.get(`/Home/Load/?range=${$('input[name="dateRange"]').val()}`, function (data) {
                    numProduct = data.numberProducts;
                    $.each(data.dailiRevenues, function (i, order) {
                        ++numOrder;
                        sumRevenue += order.totalPrice;
                        if (revenueMap.hasOwnProperty(moment(order.createdAt).format('DD-MM-YYYY'))) {
                            revenueMap[moment(order.createdAt).format('DD-MM-YYYY')] += order.totalPrice;
                        } else {
                            revenueMap[moment(order.createdAt).format('DD-MM-YYYY')] = order.totalPrice;
                        }
                    })
                    $('.revenues').text(sumRevenue);
                    $('.totalOrders').text(numOrder);
                    $('.numProducts').text(numProduct);
                }).done(function () {
                    $.each(revenueMap, function (date, revenue) {
                        console.log(date);
                        let newDate = moment(date).format('DD/MM/YYYY');
                        console.log("date" + newDate);
                        var year = moment(newDate).format('YYYY'),
                            month = moment(newDate).format('MM'),
                            quarter = Math.ceil(moment(newDate).format('MM') / 3),
                            week = Math.ceil(moment(newDate).format('DD') / 7);
                        switch ($('[name="moment"]:checked').val()) {
                            case '5':
                                if (revenueMapBy_mm['Năm ' + year]) {
                                    revenueMapBy_mm['Năm ' + year] += revenue;
                                } else {
                                    revenueMapBy_mm['Năm ' + year] = revenue;
                                }
                                break;
                            case '4':
                                if (revenueMapBy_mm['Quý ' + quarter + ' Năm ' + year]) {
                                    revenueMapBy_mm['Quý ' + quarter + ' Năm ' + year] += revenue;
                                } else {
                                    revenueMapBy_mm['Quý ' + quarter + ' Năm ' + year] = revenue;
                                }
                                break;
                            case '3':
                                if (revenueMapBy_mm['Tháng ' + month + ' Năm ' + year]) {
                                    revenueMapBy_mm['Tháng ' + month + ' Năm ' + year] += revenue;
                                } else {
                                    revenueMapBy_mm['Tháng ' + month + ' Năm ' + year] = revenue;
                                }
                                break;
                            case '2':
                                // Nếu tuần đã tồn tại trong map, cộng thêm vào tổng doanh thu
                                if (revenueMapBy_mm['Tuần ' + week + ' Tháng ' + month + ' Năm ' + year]) {
                                    revenueMapBy_mm['Tuần ' + week + ' Tháng ' + month + ' Năm ' + year] += revenue;
                                } else {
                                    // Nếu tuần chưa tồn tại tạo mới và gán giá trị ban đầu
                                    revenueMapBy_mm['Tuần ' + week + ' Tháng ' + month + ' Năm ' + year] = revenue;
                                }
                                break;
                            case '1':
                                // Nếu tuần đã tồn tại trong map, cộng thêm vào tổng doanh thu
                                if (revenueMapBy_mm['Ngày ' + date]) {
                                    revenueMapBy_mm['Ngày ' + date] += revenue;
                                } else {
                                    // Nếu Ngày chưa tồn tại tạo mới và gán giá trị ban đầu
                                    revenueMapBy_mm['Ngày ' + date] = revenue;
                                }
                                break;
                        };
                    });
                    drawChart(Object.keys(revenueMapBy_mm), Object.values(revenueMapBy_mm));
                })
            }

            //Vẽ biểu đổ với 2 tham số
            function drawChart(times, revenues) {
                var optionsProfileVisit = {
                    annotations: {
                        position: 'back'
                    },
                    dataLabels: {
                        enabled: false
                    },
                    chart: {
                        type: 'bar',
                        height: 300,
                    },
                    fill: {
                        opacity: 1
                    },
                    plotOptions: {},
                    series: [{
                        name: 'sales',
                        data: revenues,
                    }],
                    colors: `var(--bs-primary)`,
                    xaxis: {
                        categories: times,
                    },
                }
                var chartProfileVisit = new ApexCharts(document.querySelector("#chart-profile-visit"),
                    optionsProfileVisit);
                chartProfileVisit.render();
                chartProfileVisit.updateOptions(optionsProfileVisit, true);
            }
        });
    </script>
}
