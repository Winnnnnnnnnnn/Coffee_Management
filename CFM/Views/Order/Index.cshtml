@model IEnumerable<MyLibrary.DataAccess.Order>

@{
    ViewData["Title"] = "Quản lý tài khoản";
}

@Html.Partial("../Includes/_ModalCreateOrder.cshtml")
@Html.Partial("../Includes/_ModalEditOrder.cshtml")

<div class="page-heading">
    <div class="page-title">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last">
                <h3>@ViewData["Title"]</h3>
            </div>
            <div class="col-12 col-md-6 order-md-2 order-first">
                <nav aria-label="breadcrumb" class="breadcrumb-header float-start float-lg-end">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Bảng tin</a></li>
                        <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>

<div class="page-content">
    <div class="card">
        <div class="card-header">
            <button type="button" class="btn btn-create-order btn-primary me-2" data-bs-toggle="modal"
                data-bs-target="#createOrderModal"><i class="bi bi-plus-circle-dotted"></i>Thêm</button>
            <button type="button" class="btn btn-remove-order btn-danger d-none" id="btn-remove-orders"> <i
                    class="icon-mid bi bi-trash"></i> Xóa</button>
        </div>
        <div class="card-body">
            <form id="batch-form" asp-action="Delete" method="post">
                @Html.AntiForgeryToken()
                <div class="table-responsive">
                    <table class="table table-hover" id="data-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Nhân viên</th>
                                <th>Bàn</th>
                                <th>Trạng thái</th>
                                <th>Thời gian tạo</th>
                                <th>Ghi chú</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model)
                            {
                                <tr>
                                    <td>
                                        <a style="cursor: pointer;" class="btn-update-order"
                                            data-bs-target="#editOrderModal" data-id="@order.Id">Đơn @order.Id</a>
                                    </td>
                                    <td>@order.UserId</td>
                                    <td>@order.TableId</td>
                                    <td>@order.Status</td>
                                    <td>@order.CreatedAt</td>
                                    <td>@order.Note</td>
                                    <td>
                                        <input type="hidden" value="@order.Id" name="id" />
                                        <a class="btn btn-danger me-2 btn-remove" data-id="@order.Id">
                                            <i class="bi bi-trash"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#data-table').DataTable({
                "language": {
                    "sProcessing": "Đang xử lý...",
                    "sLengthMenu": "_MENU_ dòng /  trang",
                    "emptyTable": "Không có dữ liệu",
                    "sZeroRecords": "Không có kết quả nào được tìm thấy",
                    "sInfo": "Hiển thị từ _START_ đến _END_ của _TOTAL_ mục",
                    "sInfoEmpty": "Hiển thị từ 0 đến 0 của 0 mục",
                    "sInfoFiltered": "(đã lọc từ _MAX_ mục)",
                    "sInfoPostFix": "",
                    "sSearch": "Tìm kiếm:",
                    "sUrl": "",
                    "oPaginate": {
                        "sFirst": "&laquo;",
                        "sLast": "&raquo;",
                        "sNext": "&rsaquo;",
                        "sPrevious": "&lsaquo;"
                    }
                }
            });
        });

        $('.btn-create-order').click(function (e) {
            $('.save-form').trigger('reset');
            e.preventDefault();
        });

        $(document).on('click', '.btn-update-order', function (e) {
            e.preventDefault();
            const form = $(this).parents().find('form');
            let id = $(this).attr("data-id");
            $.ajax({
                url: '/Order/Edit/' + id,
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    form.find('[name=Id]').val(data.id);
                    form.find('[name=CustomerId]').val(data.name);
                    form.find('[name=TableId]').val(data.email);
                    form.find('[name=Note]').val(data.phone);
                    $('#modalEditOrder').find('.modal').modal('show')

                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        })

        $(document).on('click', '.btn-remove', function () {
            const id = parseInt($(this).attr('data-id'));
            Swal.fire({
                title: "Lưu ý!",
                text: "Bạn có chắc muốn xóa?",
                icon: "warning",
                showCancelButton: true,
                showCloseButton: true,
                confirmButtonText: "Có, Xóa nó!",
                cancelButtonText: "Không, Hủy bỏ!",
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Order/Delete/' + id,
                        type: 'GET',
                        success: function (response) {
                            window.location.reload()

                        },
                        error: function (xhr, status, error) {
                        }
                    });
                }
            });
        });

    </script>
}
